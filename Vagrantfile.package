Vagrant.configure("2") do |config|
  # Forward a port from the guest to the host, which allows for outside
  # computers to access the VM, whereas host only networking does not.
  config.vm.network :forwarded_port, guest: 8888, host: 8888, 
    host_ip: "127.0.0.1", auto_correct: true

  config.vm.provider "virtualbox" do |v|
    v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    v.customize ["modifyvm", :id, "--memory", 1024]
    v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    if not RUBY_PLATFORM.downcase.include?("mswin")
      begin
        v.customize ["modifyvm", :id, "--cpus",
            %x(awk "/^processor/ {++n} END {print n}" /proc/cpuinfo 2> /dev/null || \
            sh -c 'sysctl hw.logicalcpu 2> /dev/null || echo ": 2"' | \
            awk \'{print \$2}\').chomp ]
      rescue
      end
    end
  end

  $script = <<SCRIPT
  echo I am provisioning...
  date > /etc/vagrant_provisioned_at
  echo LC_ALL="en_US.UTF-8" > /etc/default/locale
  amixer set -c 0 Master 100 unmute > /dev/null
  amixer set -c 0 PCM 100 unmute > /dev/null ||
  echo To enable audio call: VBoxManage modifyvm \\\`cat .vagrant/machines/default/virtualbox/id\\\` --audio oss
  su vagrant <<LEVEL2SCRIPT
  cd /vagrant
  ipython3 notebook --ip="*" --no-browser > /dev/null 2> /dev/null &
  disown
LEVEL2SCRIPT
SCRIPT
  config.vm.provision :shell, :inline => $script
end

