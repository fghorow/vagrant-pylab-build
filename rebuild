#!/usr/bin/env bash

# Sorry for the sleeps virtualbox or vagrant started to misbehave

# Install vbguest plugin if needed
set -e
vagrant destroy
vagrant plugin install vagrant-vbguest
vagrant up --no-provision
vagrant ssh <<SCRIPT
  sudo bash <<LEVEL2SCRIPT
  set -e
  export DEBIAN_FRONTEND=noninteractive
  cp /etc/apt/sources.list /etc/apt/sources.list.old.pylab
  # Enabling mirrors
  echo deb mirror://mirrors.ubuntu.com/mirrors.txt precise main restricted universe multiverse > /etc/apt/sources.list
  echo deb mirror://mirrors.ubuntu.com/mirrors.txt precise-updates main restricted universe multiverse >> /etc/apt/sources.list
  echo deb mirror://mirrors.ubuntu.com/mirrors.txt precise-backports main restricted universe multiverse >> /etc/apt/sources.list
  echo deb mirror://mirrors.ubuntu.com/mirrors.txt precise-security main restricted universe multiverse >> /etc/apt/sources.list
  echo >> /etc/apt/sources.list
  echo deb http://ppa.launchpad.net/fkrull/deadsnakes/ubuntu precise main >> /etc/apt/sources.list
  echo >> /etc/apt/sources.list
  cat < /etc/apt/sources.list.old.pylab >> /etc/apt/sources.list
  # Safe update
  aptitude -y update
  aptitude -y safe-upgrade
LEVEL2SCRIPT
SCRIPT
vagrant halt
sleep 10
vagrant up --no-provision
vagrant vbguest
vagrant ssh <<SCRIPT
  sudo bash <<LEVEL2SCRIPT
  set -e
  export DEBIAN_FRONTEND=noninteractive
  apt-get -y --reinstall install aptitude
  aptitude -y install build-essential
  aptitude -o Aptitude::Cmdline::ignore-trust-violations=true -y install python3.3
  aptitude -o Aptitude::Cmdline::ignore-trust-violations=true -y install python3.3-dev
  aptitude -y install curl
  # Packages are complaining about old zmq
  # Let pyzmq use its own zmq
  # aptitude -y install libzmq-dev
  aptitude -y install libsox-dev sox gfortran libopenblas-dev liblapack-dev
  aptitude -y install git clang
  aptitude -y install vim vim-python
  # Matplotlib build depends (matplotlib not available for python3 on ubuntu)
  aptitude -y install libpng-dev libfreetype-dev libgtk2-dev librsvg2-dev
  aptitude -y install texlive dvipng
  # Install pip
  curl http://python-distribute.org/distribute_setup.py | python3.3
  curl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python3.3
  # PySide
  aptitude -y install cmake libqt4-dev libxml2-dev libxslt1-dev qtmobility-dev
  git clone https://github.com/PySide/BuildScripts.git
  cd BuildScripts
  git submodule init
  git submodule update
  export PYSIDE_BUILDSCRIPTS_USE_PYTHON3=yes
  cp /vagrant/build_pyside .
  ./build_pyside
  cd \$HOME
  rm -rf BuildScripts
  # Clean up
  aptitude -y purge linux-headers-3.2.0-23-generic linux-headers-3.2.0-23
  aptitude -y purge linux-image-3.2.0-23-generic
  apt-get autoremove
  aptitude -y clean
  aptitude -y autoclean
  # Python tools
  pip-3.3 install pytz
  pip-3.3 install six
  pip-3.3 install numpy
  pip-3.3 install scipy
  pip-3.3 install python-dateutil
  pip-3.3 install ipython
  pip-3.3 install tornado
  pip-3.3 install pyzmq
  pip-3.3 install pygments
  pip-3.3 install matplotlib
  pip-3.3 install pysox
  pip-3.3 install freeze
  pip-3.3 install -e git+git://github.com/adfinis-sygroup/adsy-python.git#egg=adsyo
  pip-3.3 install pandas
  pip-3.3 install cython

  # Pip will be cleaned by reboot since it works in /tmp
  rm distribute-*.tar.gz
  rm -rf src
  rm postinstall.sh
  addgroup vagrant audio
  cd /
  mkdir defrag
  tar c usr | tar x -C defrag
  mv /usr/ /usr.del
  mv /defrag/usr/ /
  rm -rf /usr.del
  rm -r /defrag
LEVEL2SCRIPT
SCRIPT
vagrant halt
sleep 10
vagrant up --no-provision
vagrant ssh <<SCRIPT
  dd if=/dev/zero of=/tmp/zero.pylab bs=2048
  sync
  rm /tmp/zero.pylab
  sync
SCRIPT
vagrant halt
sleep 10
HDDID=`VBoxManage showvminfo python3pylab --machinereadable | \
     grep "SATA Controller-ImageUUID-" | cut -d = -f 2 | tr -d \"`
HDDFILE=`VBoxManage showvminfo python3pylab --machinereadable | \
     grep "SATA Controller-" | grep -v -- "-ImageUUID-" | cut -d = -f 2 | tr -d \"`
VBoxManage clonehd "$HDDID" ./out.vmdk
VBoxManage internalcommands sethduuid ./out.vmdk "$HDDID"
echo Old size
du -h "$HDDFILE"
mv ./out.vmdk "$HDDFILE"
echo New size
du -h "$HDDFILE"
echo Done! Ctrl-C here for custom actions.
echo Otherwise I\'ll start the VM
sleep 30
vagrant up
